{{- if .Values.deployNonOCPStack }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "node-exporter.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "node-exporter.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "node-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "node-exporter.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - args:
        - --web.listen-address=127.0.0.1:{{ .Values.nodeExporter.hostPort }}
        - --path.sysfs=/host/sys
        - --path.rootfs=/host/root
        - --no-collector.wifi
        - --no-collector.hwmon
        - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
        - --collector.netclass.ignored-devices=^(veth.*|[a-z0-9]+@if\d+)$
        - --collector.netdev.device-exclude=^(veth.*|[a-z0-9]+@if\d+)$
        image: {{ .Values.images.nodeExporter }}
        name: node-exporter
        resources:
          limits:
            cpu: 250m
            memory: 300Mi
          requests:
            cpu: 102m
            memory: 200Mi
        securityContext:
          runAsUser: 65534
          runAsGroup: 65534
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /host/sys
          mountPropagation: HostToContainer
          name: sys
          readOnly: true
        - mountPath: /host/root
          mountPropagation: HostToContainer
          name: root
          readOnly: true
      - args:
        - --logtostderr
        - --secure-listen-address=[$(IP)]:{{ .Values.nodeExporter.hostPort }}
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - --upstream=http://127.0.0.1:{{ .Values.nodeExporter.hostPort }}/
        env:
        - name: IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: {{ .Values.images.rbacProxyImage }}
        name: kube-rbac-proxy
        ports:
        - containerPort: {{ .Values.nodeExporter.hostPort }}
          name: https
        resources:
          limits:
            cpu: 20m
            memory: 400Mi
          requests:
            cpu: 10m
            memory: 200Mi
        securityContext:
          runAsUser: 65534
          runAsGroup: 65534
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      hostNetwork: true
      hostPID: true
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ include "node-exporter.serviceAccountName" . }}
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /sys
        name: sys
      - hostPath:
          path: /
        name: root
{{- end }}