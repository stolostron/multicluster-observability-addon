{{- if or .Values.platformEnabled .Values.userWorkloadsEnabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: {{ .Values.prometheusOperator.component }}
    app.kubernetes.io/name: {{ .Values.prometheusOperator.appName }}
    {{ include "metricshelm.labels" . | nindent 4 }}
  name: {{ .Values.prometheusOperator.appName }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: {{ .Values.prometheusOperator.component }}
      app.kubernetes.io/name: {{ .Values.prometheusOperator.appName }}
      app.kubernetes.io/part-of: multicluster-observability-addon
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: prometheus-operator
      labels:
        app.kubernetes.io/component: {{ .Values.prometheusOperator.component }}
        app.kubernetes.io/name: {{ .Values.prometheusOperator.appName }}
        app.kubernetes.io/part-of: multicluster-observability-addon
    spec:
      containers:
      - image: {{ .Values.images.prometheusOperator }}
        args:
          - '--prometheus-config-reloader={{ .Values.images.prometheusConfigReloader }}'
          - '--prometheus-instance-namespaces={{ .Release.Namespace }}'
          - '--thanos-ruler-instance-namespaces={{ .Release.Namespace }}'
          - '--alertmanager-instance-namespaces={{ .Release.Namespace }}'
          - '--kubelet-service=kube-system/kubelet'
          - '--config-reloader-cpu-limit=0'
          - '--config-reloader-memory-limit=0'
          - '--config-reloader-cpu-request=1m'
          - '--config-reloader-memory-request=10Mi'
          - '--controller-id={{ .Values.prometheusControllerID }}'
        imagePullPolicy: IfNotPresent
        name: prometheus-operator
        # ports:
        #   - name: http
        #     containerPort: 8080
        #     protocol: TCP
        securityContext: 
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        resources:
          requests:
            cpu: 5m
            memory: 100Mi
      - resources:
          requests:
            cpu: 1m
            memory: 15Mi
        terminationMessagePath: /dev/termination-log
        name: kube-rbac-proxy
        securityContext:
          capabilities:
            drop:
              - ALL
          privileged: false
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        ports:
          - name: metrics
            containerPort: 9092
            protocol: TCP
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: kube-rbac-proxy-tls
            readOnly: true
            mountPath: /etc/tls/private
        terminationMessagePolicy: File
        image: {{ .Values.prometheusOperator.rbacProxyImage }}
        args:
          - '--secure-listen-address=0.0.0.0:{{ .Values.prometheusOperator.rbacProxyPort }}'
          - '--upstream=http://127.0.0.1:8080'
          - '--tls-cert-file=/etc/tls/private/tls.crt'
          - '--tls-private-key-file=/etc/tls/private/tls.key'
          - '--logtostderr=true'
          - '--allow-paths=/metrics'
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: prometheus-operator
      serviceAccountName:  {{ .Values.prometheusOperator.appName }}
      terminationGracePeriodSeconds: 600
      volumes:
        - name: kube-rbac-proxy-tls
          secret:
            secretName: {{ .Values.prometheusOperator.rbacProxyTlsSecret }}
            defaultMode: 420
{{- end }}